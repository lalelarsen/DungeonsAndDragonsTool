/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUIS;

import Controllers.BoardController;
import Controllers.MainController;
import java.awt.Color;
import java.awt.Point;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JList;

/**
 *
 * @author frederik.larsen
 */
public class BoardControllerGui extends javax.swing.JFrame implements Observer {

    /**
     * Creates new form BoardController
     */
    BoardController BC;

    public BoardControllerGui(BoardController BC) {
        this.BC = BC;
        initComponents();
        ColorBlock.setBackground(Color.GREEN);
        BC.addObserver(this);
        this.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                BC.closeWindows();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jColorChooser1 = new javax.swing.JColorChooser();
        RangeRing = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        RangeNumber = new javax.swing.JTextField();
        ResetB = new javax.swing.JButton();
        GetColorChooser = new javax.swing.JButton();
        ColorBlock = new javax.swing.JPanel();
        MouseWheelL = new javax.swing.JLabel();
        CopyColorL = new javax.swing.JLabel();
        Mousebutton2L = new javax.swing.JLabel();
        RemoveMarkedCellL = new javax.swing.JLabel();
        LeftClickL = new javax.swing.JLabel();
        MarkCellL = new javax.swing.JLabel();
        MouseFunktionsL = new javax.swing.JLabel();
        UnitsSettingL = new javax.swing.JLabel();
        ShowUnitsCB = new javax.swing.JCheckBox();
        ShowInvisUnitsCB = new javax.swing.JCheckBox();
        InvisUnitCB = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        CharacterList = new javax.swing.JList<>();
        TurnControlL = new javax.swing.JLabel();
        CharactersL = new javax.swing.JLabel();
        AddCharacterB = new javax.swing.JButton();
        CharacterNameTF = new javax.swing.JTextField();
        InitiativeSpinner = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocation(new java.awt.Point(100, 300));
        setMinimumSize(new java.awt.Dimension(172, 386));
        setName("BoardController"); // NOI18N

        RangeRing.setText("Range Ring");
        RangeRing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RangeRingActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Mouse Settings");

        RangeNumber.setToolTipText("Range");
        RangeNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RangeNumberActionPerformed(evt);
            }
        });

        ResetB.setText("Reset");
        ResetB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetBActionPerformed(evt);
            }
        });

        GetColorChooser.setText("Get Color");
        GetColorChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GetColorChooserActionPerformed(evt);
            }
        });

        ColorBlock.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout ColorBlockLayout = new javax.swing.GroupLayout(ColorBlock);
        ColorBlock.setLayout(ColorBlockLayout);
        ColorBlockLayout.setHorizontalGroup(
            ColorBlockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 48, Short.MAX_VALUE)
        );
        ColorBlockLayout.setVerticalGroup(
            ColorBlockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        MouseWheelL.setText("Mouse Wheel Click:");

        CopyColorL.setText("Copy Cells Color");

        Mousebutton2L.setText("Right Click:");

        RemoveMarkedCellL.setText("Remove Marking");

        LeftClickL.setText("Left Click:");

        MarkCellL.setText("Mark Cell");

        MouseFunktionsL.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        MouseFunktionsL.setText("Mouse Functions:");

        UnitsSettingL.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        UnitsSettingL.setText("Units Settings");

        ShowUnitsCB.setSelected(true);
        ShowUnitsCB.setText("Show Units");
        ShowUnitsCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowUnitsCBActionPerformed(evt);
            }
        });

        ShowInvisUnitsCB.setText("Show Invisible Units");
        ShowInvisUnitsCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowInvisUnitsCBActionPerformed(evt);
            }
        });

        InvisUnitCB.setText("Invisible Unit");
        InvisUnitCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InvisUnitCBActionPerformed(evt);
            }
        });

        CharacterList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CharacterListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(CharacterList);

        TurnControlL.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TurnControlL.setText("Turn Control");

        CharactersL.setText("Characters:");

        AddCharacterB.setText("Add Character");
        AddCharacterB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddCharacterBActionPerformed(evt);
            }
        });

        CharacterNameTF.setToolTipText("Character Name");
        CharacterNameTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CharacterNameTFKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ResetB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(65, 65, 65))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(MouseWheelL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                        .addComponent(CopyColorL))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Mousebutton2L)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(RemoveMarkedCellL))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(LeftClickL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(MarkCellL))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(GetColorChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(RangeRing, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RangeNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ColorBlock, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(InvisUnitCB)
                            .addComponent(ShowInvisUnitsCB)
                            .addComponent(ShowUnitsCB)
                            .addComponent(MouseFunktionsL)
                            .addComponent(UnitsSettingL)
                            .addComponent(TurnControlL)
                            .addComponent(CharactersL))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(CharacterNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(InitiativeSpinner))
                            .addComponent(AddCharacterB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ResetB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RangeRing)
                    .addComponent(RangeNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ColorBlock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(GetColorChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(InvisUnitCB)
                .addGap(27, 27, 27)
                .addComponent(UnitsSettingL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ShowUnitsCB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ShowInvisUnitsCB)
                .addGap(18, 18, 18)
                .addComponent(TurnControlL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CharactersL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(AddCharacterB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CharacterNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(InitiativeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(MouseFunktionsL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LeftClickL)
                    .addComponent(MarkCellL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Mousebutton2L)
                    .addComponent(RemoveMarkedCellL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MouseWheelL)
                    .addComponent(CopyColorL))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RangeRingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RangeRingActionPerformed
        BC.SetRangeRing(RangeNumber.getText());
    }//GEN-LAST:event_RangeRingActionPerformed

    private void RangeNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RangeNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RangeNumberActionPerformed

    private void ResetBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetBActionPerformed
        BC.reset();
    }//GEN-LAST:event_ResetBActionPerformed

    private void GetColorChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GetColorChooserActionPerformed
        Color c = jColorChooser1.showDialog(null, "Choose a Color", Color.BLUE);
        BC.CurrUnitColor = c;
        ColorBlock.setBackground(BC.CurrUnitColor);
    }//GEN-LAST:event_GetColorChooserActionPerformed

    private void ShowUnitsCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowUnitsCBActionPerformed
        BC.showUnitsCheck();
    }//GEN-LAST:event_ShowUnitsCBActionPerformed

    private void ShowInvisUnitsCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowInvisUnitsCBActionPerformed
        BC.showInvisUnitsCheck();
    }//GEN-LAST:event_ShowInvisUnitsCBActionPerformed

    private void InvisUnitCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InvisUnitCBActionPerformed
        BC.setInvisUnitsCheck();
    }//GEN-LAST:event_InvisUnitCBActionPerformed

    private void AddCharacterBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddCharacterBActionPerformed
        String name = CharacterNameTF.getText();
        int intiative = (int)InitiativeSpinner.getValue();
        AddCharacterB.setText("Update Character");
        BC.addCharacter(name,intiative);
    }//GEN-LAST:event_AddCharacterBActionPerformed

    private void CharacterListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CharacterListMouseClicked
        String str = CharacterList.getSelectedValue();
        String[] tokens = str.split("/");
        int intiative = Integer.parseInt(tokens[0]);
        CharacterNameTF.setText(tokens[1]);
        InitiativeSpinner.setValue(intiative);
        AddCharacterB.setText("Update Character");
    }//GEN-LAST:event_CharacterListMouseClicked

    private void CharacterNameTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CharacterNameTFKeyPressed
        AddCharacterB.setText("Add Character");
    }//GEN-LAST:event_CharacterNameTFKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BoardControllerGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BoardControllerGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BoardControllerGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BoardControllerGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new BoardController().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddCharacterB;
    private javax.swing.JList<String> CharacterList;
    private javax.swing.JTextField CharacterNameTF;
    private javax.swing.JLabel CharactersL;
    private javax.swing.JPanel ColorBlock;
    private javax.swing.JLabel CopyColorL;
    private javax.swing.JButton GetColorChooser;
    private javax.swing.JSpinner InitiativeSpinner;
    private javax.swing.JCheckBox InvisUnitCB;
    private javax.swing.JLabel LeftClickL;
    private javax.swing.JLabel MarkCellL;
    private javax.swing.JLabel MouseFunktionsL;
    private javax.swing.JLabel MouseWheelL;
    private javax.swing.JLabel Mousebutton2L;
    private javax.swing.JTextField RangeNumber;
    private javax.swing.JButton RangeRing;
    private javax.swing.JLabel RemoveMarkedCellL;
    private javax.swing.JButton ResetB;
    private javax.swing.JCheckBox ShowInvisUnitsCB;
    private javax.swing.JCheckBox ShowUnitsCB;
    private javax.swing.JLabel TurnControlL;
    private javax.swing.JLabel UnitsSettingL;
    private javax.swing.JColorChooser jColorChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object arg) {
        Object[] nArg = (Object[]) arg;
        String Mess = (String) nArg[0];
        switch (Mess) {
            case "Color Change":
                ColorBlock.setBackground(BC.CurrUnitColor);
                break;
            case "Close":
                setVisible(false);
                dispose();
                break;
            case "Update Character List":
                ArrayList<String> list = (ArrayList<String>)nArg[1];
                String[] nList = new String[list.size()];
                for (int i = 0; i < list.size(); i++) {
                    nList[i] = list.get(i);
                }
                CharacterList.setListData(nList);
                break;

        }
    }
}
